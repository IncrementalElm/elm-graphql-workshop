-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module ElmGithub.Enum.IdentityProviderConfigurationState exposing (IdentityProviderConfigurationState(..), decoder, list, toString)

import Json.Decode as Decode exposing (Decoder)


{-| The possible states in which authentication can be configured with an Identity Provider.

  - Enforced - Authentication with an Identity Provider is configured and enforced.
  - Configured - Authentication with an Identity Provider is configured but not enforced.
  - Unconfigured - Authentication with an Identity Provider is not configured.

-}
type IdentityProviderConfigurationState
    = Enforced
    | Configured
    | Unconfigured


list : List IdentityProviderConfigurationState
list =
    [ Enforced, Configured, Unconfigured ]


decoder : Decoder IdentityProviderConfigurationState
decoder =
    Decode.string
        |> Decode.andThen
            (\string ->
                case string of
                    "ENFORCED" ->
                        Decode.succeed Enforced

                    "CONFIGURED" ->
                        Decode.succeed Configured

                    "UNCONFIGURED" ->
                        Decode.succeed Unconfigured

                    _ ->
                        Decode.fail ("Invalid IdentityProviderConfigurationState type, " ++ string ++ " try re-running the @dillonkearns/elm-graphql CLI ")
            )


{-| Convert from the union type representating the Enum to a string that the GraphQL server will recognize.
-}
toString : IdentityProviderConfigurationState -> String
toString enum =
    case enum of
        Enforced ->
            "ENFORCED"

        Configured ->
            "CONFIGURED"

        Unconfigured ->
            "UNCONFIGURED"
