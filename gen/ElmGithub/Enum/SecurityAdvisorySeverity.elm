-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module ElmGithub.Enum.SecurityAdvisorySeverity exposing (SecurityAdvisorySeverity(..), decoder, list, toString)

import Json.Decode as Decode exposing (Decoder)


{-| Severity of the vulnerability.

  - Low - Low.
  - Moderate - Moderate.
  - High - High.
  - Critical - Critical.

-}
type SecurityAdvisorySeverity
    = Low
    | Moderate
    | High
    | Critical


list : List SecurityAdvisorySeverity
list =
    [ Low, Moderate, High, Critical ]


decoder : Decoder SecurityAdvisorySeverity
decoder =
    Decode.string
        |> Decode.andThen
            (\string ->
                case string of
                    "LOW" ->
                        Decode.succeed Low

                    "MODERATE" ->
                        Decode.succeed Moderate

                    "HIGH" ->
                        Decode.succeed High

                    "CRITICAL" ->
                        Decode.succeed Critical

                    _ ->
                        Decode.fail ("Invalid SecurityAdvisorySeverity type, " ++ string ++ " try re-running the @dillonkearns/elm-graphql CLI ")
            )


{-| Convert from the union type representating the Enum to a string that the GraphQL server will recognize.
-}
toString : SecurityAdvisorySeverity -> String
toString enum =
    case enum of
        Low ->
            "LOW"

        Moderate ->
            "MODERATE"

        High ->
            "HIGH"

        Critical ->
            "CRITICAL"
