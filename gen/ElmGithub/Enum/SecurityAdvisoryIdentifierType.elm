-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module ElmGithub.Enum.SecurityAdvisoryIdentifierType exposing (SecurityAdvisoryIdentifierType(..), decoder, list, toString)

import Json.Decode as Decode exposing (Decoder)


{-| Identifier formats available for advisories.

  - Cve - Common Vulnerabilities and Exposures Identifier.
  - Ghsa - GitHub Security Advisory ID.

-}
type SecurityAdvisoryIdentifierType
    = Cve
    | Ghsa


list : List SecurityAdvisoryIdentifierType
list =
    [ Cve, Ghsa ]


decoder : Decoder SecurityAdvisoryIdentifierType
decoder =
    Decode.string
        |> Decode.andThen
            (\string ->
                case string of
                    "CVE" ->
                        Decode.succeed Cve

                    "GHSA" ->
                        Decode.succeed Ghsa

                    _ ->
                        Decode.fail ("Invalid SecurityAdvisoryIdentifierType type, " ++ string ++ " try re-running the @dillonkearns/elm-graphql CLI ")
            )


{-| Convert from the union type representating the Enum to a string that the GraphQL server will recognize.
-}
toString : SecurityAdvisoryIdentifierType -> String
toString enum =
    case enum of
        Cve ->
            "CVE"

        Ghsa ->
            "GHSA"
