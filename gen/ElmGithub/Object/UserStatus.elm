-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module ElmGithub.Object.UserStatus exposing (createdAt, emoji, id, indicatesLimitedAvailability, message, organization, updatedAt, user)

import ElmGithub.InputObject
import ElmGithub.Interface
import ElmGithub.Object
import ElmGithub.Scalar
import ElmGithub.ScalarCodecs
import ElmGithub.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


{-| Identifies the date and time when the object was created.
-}
createdAt : SelectionSet ElmGithub.ScalarCodecs.DateTime ElmGithub.Object.UserStatus
createdAt =
    Object.selectionForField "ScalarCodecs.DateTime" "createdAt" [] (ElmGithub.ScalarCodecs.codecs |> ElmGithub.Scalar.unwrapCodecs |> .codecDateTime |> .decoder)


{-| An emoji summarizing the user's status.
-}
emoji : SelectionSet (Maybe String) ElmGithub.Object.UserStatus
emoji =
    Object.selectionForField "(Maybe String)" "emoji" [] (Decode.string |> Decode.nullable)


{-| ID of the object.
-}
id : SelectionSet ElmGithub.ScalarCodecs.Id ElmGithub.Object.UserStatus
id =
    Object.selectionForField "ScalarCodecs.Id" "id" [] (ElmGithub.ScalarCodecs.codecs |> ElmGithub.Scalar.unwrapCodecs |> .codecId |> .decoder)


{-| Whether this status indicates the user is not fully available on GitHub.
-}
indicatesLimitedAvailability : SelectionSet Bool ElmGithub.Object.UserStatus
indicatesLimitedAvailability =
    Object.selectionForField "Bool" "indicatesLimitedAvailability" [] Decode.bool


{-| A brief message describing what the user is doing.
-}
message : SelectionSet (Maybe String) ElmGithub.Object.UserStatus
message =
    Object.selectionForField "(Maybe String)" "message" [] (Decode.string |> Decode.nullable)


{-| The organization whose members can see this status. If null, this status is publicly visible.
-}
organization : SelectionSet decodesTo ElmGithub.Object.Organization -> SelectionSet (Maybe decodesTo) ElmGithub.Object.UserStatus
organization object_ =
    Object.selectionForCompositeField "organization" [] object_ (identity >> Decode.nullable)


{-| Identifies the date and time when the object was last updated.
-}
updatedAt : SelectionSet ElmGithub.ScalarCodecs.DateTime ElmGithub.Object.UserStatus
updatedAt =
    Object.selectionForField "ScalarCodecs.DateTime" "updatedAt" [] (ElmGithub.ScalarCodecs.codecs |> ElmGithub.Scalar.unwrapCodecs |> .codecDateTime |> .decoder)


{-| The user who has this status.
-}
user : SelectionSet decodesTo ElmGithub.Object.User -> SelectionSet decodesTo ElmGithub.Object.UserStatus
user object_ =
    Object.selectionForCompositeField "user" [] object_ identity
