-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module ElmGithub.Object.ProjectCard exposing (column, content, createdAt, creator, databaseId, id, isArchived, note, project, resourcePath, state, updatedAt, url)

import ElmGithub.Enum.ProjectCardState
import ElmGithub.InputObject
import ElmGithub.Interface
import ElmGithub.Object
import ElmGithub.Scalar
import ElmGithub.ScalarCodecs
import ElmGithub.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


{-| The project column this card is associated under. A card may only belong to one
project column at a time. The column field will be null if the card is created
in a pending state and has yet to be associated with a column. Once cards are
associated with a column, they will not become pending in the future.
-}
column : SelectionSet decodesTo ElmGithub.Object.ProjectColumn -> SelectionSet (Maybe decodesTo) ElmGithub.Object.ProjectCard
column object_ =
    Object.selectionForCompositeField "column" [] object_ (identity >> Decode.nullable)


{-| The card content item
-}
content : SelectionSet decodesTo ElmGithub.Union.ProjectCardItem -> SelectionSet (Maybe decodesTo) ElmGithub.Object.ProjectCard
content object_ =
    Object.selectionForCompositeField "content" [] object_ (identity >> Decode.nullable)


{-| Identifies the date and time when the object was created.
-}
createdAt : SelectionSet ElmGithub.ScalarCodecs.DateTime ElmGithub.Object.ProjectCard
createdAt =
    Object.selectionForField "ScalarCodecs.DateTime" "createdAt" [] (ElmGithub.ScalarCodecs.codecs |> ElmGithub.Scalar.unwrapCodecs |> .codecDateTime |> .decoder)


{-| The actor who created this card
-}
creator : SelectionSet decodesTo ElmGithub.Interface.Actor -> SelectionSet (Maybe decodesTo) ElmGithub.Object.ProjectCard
creator object_ =
    Object.selectionForCompositeField "creator" [] object_ (identity >> Decode.nullable)


{-| Identifies the primary key from the database.
-}
databaseId : SelectionSet (Maybe Int) ElmGithub.Object.ProjectCard
databaseId =
    Object.selectionForField "(Maybe Int)" "databaseId" [] (Decode.int |> Decode.nullable)


{-| -}
id : SelectionSet ElmGithub.ScalarCodecs.Id ElmGithub.Object.ProjectCard
id =
    Object.selectionForField "ScalarCodecs.Id" "id" [] (ElmGithub.ScalarCodecs.codecs |> ElmGithub.Scalar.unwrapCodecs |> .codecId |> .decoder)


{-| Whether the card is archived
-}
isArchived : SelectionSet Bool ElmGithub.Object.ProjectCard
isArchived =
    Object.selectionForField "Bool" "isArchived" [] Decode.bool


{-| The card note
-}
note : SelectionSet (Maybe String) ElmGithub.Object.ProjectCard
note =
    Object.selectionForField "(Maybe String)" "note" [] (Decode.string |> Decode.nullable)


{-| The project that contains this card.
-}
project : SelectionSet decodesTo ElmGithub.Object.Project -> SelectionSet decodesTo ElmGithub.Object.ProjectCard
project object_ =
    Object.selectionForCompositeField "project" [] object_ identity


{-| The HTTP path for this card
-}
resourcePath : SelectionSet ElmGithub.ScalarCodecs.Uri ElmGithub.Object.ProjectCard
resourcePath =
    Object.selectionForField "ScalarCodecs.Uri" "resourcePath" [] (ElmGithub.ScalarCodecs.codecs |> ElmGithub.Scalar.unwrapCodecs |> .codecUri |> .decoder)


{-| The state of ProjectCard
-}
state : SelectionSet (Maybe ElmGithub.Enum.ProjectCardState.ProjectCardState) ElmGithub.Object.ProjectCard
state =
    Object.selectionForField "(Maybe Enum.ProjectCardState.ProjectCardState)" "state" [] (ElmGithub.Enum.ProjectCardState.decoder |> Decode.nullable)


{-| Identifies the date and time when the object was last updated.
-}
updatedAt : SelectionSet ElmGithub.ScalarCodecs.DateTime ElmGithub.Object.ProjectCard
updatedAt =
    Object.selectionForField "ScalarCodecs.DateTime" "updatedAt" [] (ElmGithub.ScalarCodecs.codecs |> ElmGithub.Scalar.unwrapCodecs |> .codecDateTime |> .decoder)


{-| The HTTP URL for this card
-}
url : SelectionSet ElmGithub.ScalarCodecs.Uri ElmGithub.Object.ProjectCard
url =
    Object.selectionForField "ScalarCodecs.Uri" "url" [] (ElmGithub.ScalarCodecs.codecs |> ElmGithub.Scalar.unwrapCodecs |> .codecUri |> .decoder)
