-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module ElmGithub.Object.TeamRepositoryEdge exposing (cursor, node, permission)

import ElmGithub.Enum.RepositoryPermission
import ElmGithub.InputObject
import ElmGithub.Interface
import ElmGithub.Object
import ElmGithub.Scalar
import ElmGithub.ScalarCodecs
import ElmGithub.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


{-| A cursor for use in pagination.
-}
cursor : SelectionSet String ElmGithub.Object.TeamRepositoryEdge
cursor =
    Object.selectionForField "String" "cursor" [] Decode.string


{-| -}
node : SelectionSet decodesTo ElmGithub.Object.Repository -> SelectionSet decodesTo ElmGithub.Object.TeamRepositoryEdge
node object_ =
    Object.selectionForCompositeField "node" [] object_ identity


{-| The permission level the team has on the repository
-}
permission : SelectionSet ElmGithub.Enum.RepositoryPermission.RepositoryPermission ElmGithub.Object.TeamRepositoryEdge
permission =
    Object.selectionForField "Enum.RepositoryPermission.RepositoryPermission" "permission" [] ElmGithub.Enum.RepositoryPermission.decoder
