-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Weather.Object.City exposing (coord, country, id, name)

import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode
import Weather.InputObject
import Weather.Interface
import Weather.Object
import Weather.Scalar
import Weather.ScalarDecoders
import Weather.Union


{-| -}
id : SelectionSet (Maybe Int) Weather.Object.City
id =
    Object.selectionForField "(Maybe Int)" "id" [] (Decode.int |> Decode.nullable)


{-| -}
name : SelectionSet (Maybe String) Weather.Object.City
name =
    Object.selectionForField "(Maybe String)" "name" [] (Decode.string |> Decode.nullable)


{-| -}
coord : SelectionSet decodesTo Weather.Object.Coordinate -> SelectionSet (Maybe decodesTo) Weather.Object.City
coord object_ =
    Object.selectionForCompositeField "coord" [] object_ (identity >> Decode.nullable)


{-| -}
country : SelectionSet (Maybe String) Weather.Object.City
country =
    Object.selectionForField "(Maybe String)" "country" [] (Decode.string |> Decode.nullable)
