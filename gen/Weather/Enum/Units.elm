-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Weather.Enum.Units exposing (Units(..), decoder, list, toString)

import Json.Decode as Decode exposing (Decoder)


{-|

  - Metric -
  - Imperial -
  - Standard -

-}
type Units
    = Metric
    | Imperial
    | Standard


list : List Units
list =
    [ Metric, Imperial, Standard ]


decoder : Decoder Units
decoder =
    Decode.string
        |> Decode.andThen
            (\string ->
                case string of
                    "metric" ->
                        Decode.succeed Metric

                    "imperial" ->
                        Decode.succeed Imperial

                    "standard" ->
                        Decode.succeed Standard

                    _ ->
                        Decode.fail ("Invalid Units type, " ++ string ++ " try re-running the @dillonkearns/elm-graphql CLI ")
            )


{-| Convert from the union type representating the Enum to a string that the GraphQL server will recognize.
-}
toString : Units -> String
toString enum =
    case enum of
        Metric ->
            "metric"

        Imperial ->
            "imperial"

        Standard ->
            "standard"
