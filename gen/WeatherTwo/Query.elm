-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module WeatherTwo.Query exposing (CurrentWeatherRequiredArguments, currentWeather)

import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode exposing (Decoder)
import WeatherTwo.Enum.TemperatureUnit
import WeatherTwo.InputObject
import WeatherTwo.Interface
import WeatherTwo.Object
import WeatherTwo.Scalar
import WeatherTwo.ScalarCodecs
import WeatherTwo.Union


type alias CurrentWeatherRequiredArguments =
    { city : String
    , units : WeatherTwo.Enum.TemperatureUnit.TemperatureUnit
    }


{-|

  - city -
  - units -

-}
currentWeather : CurrentWeatherRequiredArguments -> SelectionSet decodesTo WeatherTwo.Object.CurrentWeather -> SelectionSet decodesTo RootQuery
currentWeather requiredArgs object_ =
    Object.selectionForCompositeField "currentWeather" [ Argument.required "city" requiredArgs.city Encode.string, Argument.required "units" requiredArgs.units (Encode.enum WeatherTwo.Enum.TemperatureUnit.toString) ] object_ identity
