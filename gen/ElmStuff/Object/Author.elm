-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module ElmStuff.Object.Author exposing (name, packages)

import ElmStuff.InputObject
import ElmStuff.Interface
import ElmStuff.Object
import ElmStuff.Scalar
import ElmStuff.ScalarDecoders
import ElmStuff.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


{-| -}
name : SelectionSet String ElmStuff.Object.Author
name =
    Object.selectionForField "String" "name" [] Decode.string


{-| -}
packages : SelectionSet decodesTo ElmStuff.Object.Package -> SelectionSet (List decodesTo) ElmStuff.Object.Author
packages object_ =
    Object.selectionForCompositeField "packages" [] object_ (identity >> Decode.list)
