-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module ShoppingCart.Query exposing (DiscountOrErrorRequiredArguments, DiscountRequiredArguments, discount, discountOrError)

import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode exposing (Decoder)
import ShoppingCart.InputObject
import ShoppingCart.Interface
import ShoppingCart.Object
import ShoppingCart.Scalar
import ShoppingCart.ScalarCodecs
import ShoppingCart.Union


type alias DiscountRequiredArguments =
    { code : String }


{-|

  - code -

-}
discount : DiscountRequiredArguments -> SelectionSet decodesTo ShoppingCart.Object.DiscountInfo -> SelectionSet (Maybe decodesTo) RootQuery
discount requiredArgs object_ =
    Object.selectionForCompositeField "discount" [ Argument.required "code" requiredArgs.code Encode.string ] object_ (identity >> Decode.nullable)


type alias DiscountOrErrorRequiredArguments =
    { code : String }


{-|

  - code -

-}
discountOrError : DiscountOrErrorRequiredArguments -> SelectionSet decodesTo ShoppingCart.Union.DiscountInfoOrError -> SelectionSet decodesTo RootQuery
discountOrError requiredArgs object_ =
    Object.selectionForCompositeField "discountOrError" [ Argument.required "code" requiredArgs.code Encode.string ] object_ identity
