-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module ElmStuffImperfect.Object.Author exposing (name, packages)

import ElmStuffImperfect.InputObject
import ElmStuffImperfect.Interface
import ElmStuffImperfect.Object
import ElmStuffImperfect.Scalar
import ElmStuffImperfect.ScalarCodecs
import ElmStuffImperfect.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


{-| -}
name : SelectionSet (Maybe String) ElmStuffImperfect.Object.Author
name =
    Object.selectionForField "(Maybe String)" "name" [] (Decode.string |> Decode.nullable)


{-| -}
packages : SelectionSet decodesTo ElmStuffImperfect.Object.Package -> SelectionSet (Maybe (List (Maybe decodesTo))) ElmStuffImperfect.Object.Author
packages object_ =
    Object.selectionForCompositeField "packages" [] object_ (identity >> Decode.nullable >> Decode.list >> Decode.nullable)
