-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Books.Query exposing (books, version)

import Books.InputObject
import Books.Interface
import Books.Object
import Books.Scalar
import Books.ScalarDecoders
import Books.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode exposing (Decoder)


{-| -}
books : SelectionSet decodesTo Books.Object.Book -> SelectionSet (List decodesTo) RootQuery
books object_ =
    Object.selectionForCompositeField "books" [] object_ (identity >> Decode.list)


{-| -}
version : SelectionSet String RootQuery
version =
    Object.selectionForField "String" "version" [] Decode.string
